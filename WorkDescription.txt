Trabalho Prático 1
Professor Mayron Moreira
Universidade Federal de Lavras
Departamento de Ciência da Computação
GCC218 - Algoritmos em Grafos
Valor máximo: 15 pts
31 de outubro de 2017
1 Descrição preliminar

Resolva os problemas propostos abaixo, utilizando algoritmos e estruturas de dados em grafos
vistos no curso.

1.1 P1: Problema do guia turístico
Um guia turístico autônomo, residente na cidade de Lavras (MG), presta serviços semanalmente
para grupos de turistas interessados em conhecer as belezas naturais desta região.
Para economizar custos, este guia também é o condutor dos veículos utilizados nos passeios.

As cidades são conectadas através de rodovias de mão-dupla. Para cada par de cidades,
existe um serviço de aluguel de ônibus utilizado por este guia, a fim de completar os passeios
pré-estabelecidos. Cada ônibus alugado pelo guia possui uma capacidade pré-estabelecida
(incluindo o condutor). O guia turístico possui um mapa contendo as ligações entre as cidades
da região e a capacidade de transporte das pessoas entre as cidades (levando em conta
o veículo disponível no trajeto).

A demanda de turistas impossibilita o transporte de todos os passageiros em uma única
viagem. Para que os custos sejam minimizados, este guia requer a você, aluno tão aplicado em
Algoritmos em Grafos, que resolva o problema de minimizar o número de viagens realizadas
de uma origem a um destino. Abaixo, apresentamos um exemplo de dado de entrada deste
problema:

Entrada
7 10
1 2 30
1 3 15
1 4 10
2 4 25
2 5 60
3 4 40
3 6 20
4 7 35
5 7 20
6 7 30
1 7 99
0 0

A primeira linha indica o número de vértices (n) e o número de arestas (m) do grafo que
modela a conexão entre cidades, respectivamente. Para cada das m linhas apresentadas a
seguir, temos o par de vértices a ser ligado e a capacidade do transporte de pessoas entre as
cidades (por exemplo: entre as cidades 1 e 2, temos à disposição um veículo com capacidade
de transporte igual a 30 pessoas). A primeira linha após a apresentação das arestas com
seus pesos indica o vértice de origem, o vértice de destino e o número de turistas a serem
transportados (por exemplo: 1 7 99). O par 0 0 indica o fim do arquivo. Importante: é
permitido que mais de um caso de teste seja especificado em um arquivo.
Como resposta deste teste, espera-se que seja impresso na tela a mensagem mostrada
abaixo.

Saída

Caso #1
Minimo de viagens = 5
Rota: 1 - 2 - 4 - 7


1.2 P2: Problema da coleta de neve

A empresa “Quel Freddo” é especializada no serviço de coleta de neve na cidade de Yellowknife1
, Canadá. Devido a cortes no orçamento, a “Quel Freddo” possui exatamente uma
máquina de coleta de neve. A máquina pode limpar exatamente uma faixa da pista em uma
única passada. Sempre que ocorre uma nevasca, a máquina parte do depósito e realiza um
tour, empilhando a neve em locais apropriados. O grande gargalo deste problema consiste
na tarefa de recolher a neve das ruas. Desta forma, qual é o menor tempo gasto para retirar
a neve das ruas de tal forma que não haja neve espalhada pelas vias principais da cidade?
Ajude a “Quel Freddo” a resolver este problema através de Algoritmos em Grafos.
Para tanto, tomemos as seguintes hipóteses:

• Todas as ruas são perfeitamente retas, de mão-dupla e com uma faixa em cada sentido;
• A máquina pode virar em qualquer direção (inclusive um giro em U) em qualquer
interseção, no fim de qualquer rua;
• A máquina percorre 20 Km/h se está coletando a neve, e 50 Km/h se está passando
por um via onde a neve já foi coletada;
• A máquina deve voltar para seu ponto de partida no final das atividades de coleta de
neve;
1https://en.wikipedia.org/wiki/Yellowknife
2
• É possível alcançar qualquer rua a partir do ponto de partida da máquina;
• Caso o ponto de partida não coincida com o início ou o fim de alguma rua, esta é
alcançável ou alcança o ponto de partida por uma rua de mão única.
Apresentamos um exemplo de dado de entrada deste problema na sequência.
Entrada
1
0 0
0 0 10000 10000
5000 -10000 5000 10000
5000 10000 10000 10000
A primeira linha indica o número de casos de teste a serem feitos, seguido de uma linha
em branco. Assim, para cada caso de teste, a primeira linha contem dois inteiros, que
representam as coordenadas cartesianas do ponto de partida da máquina (a unidade de
distância será metros). Cada linha seguinte dá as coordenadas do início e do fim de cada
rua. Lembre-se: existe uma linha branca entre cada caso de teste. A resposta esperada
para este caso consiste no tempo mínimo gasto para a execução desta tarefa, no formato
hora:minuto.
Saída
3:55
Caso os minutos resultem em um número fracionário, arredonde-o para o menor inteiro
maior que os minutos calculados. Na saída, imprima uma linha branca entre cada caso de
teste.
1.3 Estrutura de dados
Os grupos deverão escolher pelo menos uma das estruturas de dados para a implementação
dos algoritmos. Estas são mostradas a seguir:
• Lista de adjacência;
• Matriz de adjacência;
• Matriz de incidência.
2 Regras para a entrega
• Os alunos deverão fazer os trabalhos em duplas.
• O trabalho deverá ser implementado em C++ ou Python.
• Cada grupo deverá implementar a estrutura ou classe Grafo.
3
• A execução dos problemas 1 e 2 será dada por:
– C++: ./p1 arquivoTesteP1.txt; ./p2 arquivoTesteP2.txt
– Python: python p1.py arquivoTeste.txt; python p2.py arquivoTesteP2.txt
• Data e hora de entrega: 10/12/2017, até às 23h55.
• Qualquer constatação de cópia ou plágio de trabalhos acarretará em nulidade
das notas de todos os membros dos grupos envolvidos (inclusive dos
que cederam o trabalho).
• O upload do código fonte referente a este trabalho deve ser feito no Campus Virtual, na
respectiva sala da disciplina dos membros da dupla, em local devidamente especificado.
Além disso, em um arquivo .pdf de no máximo 6 páginas (sem contar a capa), cada
dupla deverá entregar um documento, dividido em 2 seções, que deverá constar:
– Algoritmos implementados: apresentação dos algoritmos que respondem cada
pergunta, via pseudocódigo, e sua devida explicação. A dupla deve explicar qual
foi a estratégia e a lógica adotada no método proposto, devidamente justificadas.
– Resultados: apresentação de uma tabela de resultados que resolvam os problemas
P1 e P2, indicando o valor da solução e o tempo computacional gasto pelo
algoritmo.
• Apenas um dos alunos da dupla deve depositar o conteúdo do trabalho no sistema.
Para tanto, a pasta compactada com todos os arquivos deve ter o seguinte formato:
matriculaAluno1 matriculaAluno2.rar ou matriculaAluno1 matriculaAluno2.tar.gz
• Os grupos que fizerem o trabalho em C++ deverão fornecer um Makefile para compilação
do código.
• Será descontado 1 ponto dos membros de cada grupo cujo trabalho não seguir as
especificações estabecidas neste documento.
• Soluções do tipo força bruta não serão consideradas.
• Trabalhos entregues após a data limite terão os seguintes descontos de nota:
– 11/12: 20% da nota;
– 12/12: 50% da nota;
– 13/12: 70% da nota;
– Após dia 13/12: não serão aceitos.
• Clareza, criatividade, eficiência do algoritmo, acurácia da solução, organização do có-
digo fonte e desempenho na entrevista com o docente serão itens levados em conta na
avaliação.
4
• O docente solicitará a todas as duplas uma apresentação oral deste trabalho, em data
e horário a combinar (estabelecidos no Campus Virtual). Alunos que não realizarem
a apresentação oral ao docente em data e horário planejado serão
penalizados na nota final.
5